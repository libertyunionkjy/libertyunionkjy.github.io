<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>柯柯的博客</title>
  
  <subtitle>KK&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jyke.xyz/"/>
  <updated>2020-05-12T13:06:50.052Z</updated>
  <id>https://jyke.xyz/</id>
  
  <author>
    <name>Keke</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://jyke.xyz/posts/16107.html"/>
    <id>https://jyke.xyz/posts/16107.html</id>
    <published>2021-11-17T03:42:27.524Z</published>
    <updated>2020-05-12T13:06:50.052Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Cloud-init是什么？</title>
    <link href="https://jyke.xyz/posts/3112.html"/>
    <id>https://jyke.xyz/posts/3112.html</id>
    <published>2020-09-02T13:42:00.000Z</published>
    <updated>2020-09-02T13:45:37.151Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;cloud-init&quot;&gt;Cloud-init&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;cloud-init是云平台为Linux操作系统的虚拟机做系统初始化配置的开源服务软件。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;目前大部分公有云（openstack, AWS, Aliyun）都在使用cloud-init, 已经成为虚拟机元数据管理和OS系统配置初始化的事实标准。&lt;/p&gt;
&lt;p&gt;可以完成包括但不限于以下的工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认语言环境&lt;/li&gt;
&lt;li&gt;实例的主机名&lt;/li&gt;
&lt;li&gt;注入ssh key到.ssh/authorized_keys&lt;/li&gt;
&lt;li&gt;设置用户密码&lt;/li&gt;
&lt;li&gt;配置网络&lt;/li&gt;
&lt;li&gt;安装软件包&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="分布式与云计算" scheme="https://jyke.xyz/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8E%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
      <category term="linux" scheme="https://jyke.xyz/tags/linux/"/>
    
      <category term="虚拟化" scheme="https://jyke.xyz/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Git学习笔记（二）</title>
    <link href="https://jyke.xyz/posts/63098.html"/>
    <id>https://jyke.xyz/posts/63098.html</id>
    <published>2020-08-23T18:03:50.000Z</published>
    <updated>2020-08-27T11:51:40.322Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;git&quot;&gt;Git&lt;/h1&gt;
&lt;p&gt;Git和代码托管中心&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码托管中心：维护远程库&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;局域网环境下：gitlab&lt;/li&gt;
&lt;li&gt;外网环境下：github、码云&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://jyke.xyz/posts/46563.html"/>
    <id>https://jyke.xyz/posts/46563.html</id>
    <published>2020-08-13T18:04:40.000Z</published>
    <updated>2020-08-13T18:06:29.510Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;正则表达式&quot;&gt;正则表达式&lt;/h2&gt;
&lt;p&gt;正则表达式可以用&lt;strong&gt;字符串&lt;/strong&gt;来描述规则，并用来匹配字符串。&lt;/p&gt;
&lt;p&gt;正则表达式是一套标准，它可以用于任何语言。&lt;/p&gt;
&lt;p&gt;正则表达式是一串字符串。&lt;/p&gt;
&lt;p&gt;在JAVA中使用正则表达式匹配：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String regex = &lt;span class=&quot;string&quot;&gt;&quot;20\\d\\d&quot;&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//对应的正则表达式是20\d\d，匹配20##年&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;2019&quot;&lt;/span&gt;.matches(regex)); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;2100&quot;&lt;/span&gt;.matches(regex)); &lt;span class=&quot;comment&quot;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://jyke.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7下firewalld的安装与常用操作</title>
    <link href="https://jyke.xyz/posts/24271.html"/>
    <id>https://jyke.xyz/posts/24271.html</id>
    <published>2020-08-07T07:13:54.000Z</published>
    <updated>2020-08-07T07:19:03.595Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;firewalld是Linux操作系统的防火墙管理工具。它通过充当Linux内核的netfilter框架的前端来提供防火墙功能，就像iptables一样。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>廖雪峰JAVA学习笔记（7）——多线程</title>
    <link href="https://jyke.xyz/posts/63211.html"/>
    <id>https://jyke.xyz/posts/63211.html</id>
    <published>2020-07-30T17:19:27.000Z</published>
    <updated>2020-08-07T07:18:37.722Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;中断线程&quot;&gt;中断线程&lt;/h3&gt;
&lt;h4 id=&quot;interrupt方法&quot;&gt;interrupt()方法&lt;/h4&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; InterruptedException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Thread t = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyThread();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Thread.sleep(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t.interrupt(); &lt;span class=&quot;comment&quot;&gt;// 中断t线程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t.join(); &lt;span class=&quot;comment&quot;&gt;// 等待t线程结束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;end&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyThread&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Thread hello = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HelloThread();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        hello.start(); &lt;span class=&quot;comment&quot;&gt;// 启动hello线程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            hello.join(); &lt;span class=&quot;comment&quot;&gt;// 等待hello线程结束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;interrupted!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        hello.interrupt();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HelloThread&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!isInterrupted()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            n++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(n + &lt;span class=&quot;string&quot;&gt;&quot; hello!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Thread.sleep(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;1 hello! 2 hello! 3 hello! 4 hello! 5 hello! 6 hello! 7 hello! 8 hello! 9 hello! interrupted! end&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;每次输出的&lt;code&gt;hello!&lt;/code&gt;个数都是不一样的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JAVA" scheme="https://jyke.xyz/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://jyke.xyz/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>什么是VLAN和VXLAN？</title>
    <link href="https://jyke.xyz/posts/58599.html"/>
    <id>https://jyke.xyz/posts/58599.html</id>
    <published>2020-07-30T17:15:57.000Z</published>
    <updated>2020-07-30T17:21:25.833Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;VXLAN的东西说起来很简单，深挖的东西又太多了，先挖个坑，有时间填上...&lt;/p&gt;
    
    </summary>
    
    
      <category term="分布式与云计算" scheme="https://jyke.xyz/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8E%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
      <category term="分布式与云计算" scheme="https://jyke.xyz/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8E%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>什么是KVM和QEMU</title>
    <link href="https://jyke.xyz/posts/20354.html"/>
    <id>https://jyke.xyz/posts/20354.html</id>
    <published>2020-07-24T05:34:25.000Z</published>
    <updated>2020-07-24T07:44:04.952Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;kvm&quot;&gt;KVM&lt;/h1&gt;
&lt;p&gt;KVM实际是linux内核提供的虚拟化架构，可将内核直接充当hypervisor来使用。KVM需要处理器硬件本身支持虚拟化扩展，如intel VT 和AMD AMD-V技术。KVM本身不实现任何模拟，仅仅是暴露了一个/dev/kvm接口，这个接口可被宿主机用来主要负责vCPU的创建，虚拟内存的地址空间分配，vCPU寄存器的读写以及vCPU的运行。 有了KVM以后，guest os的CPU指令不用再经过QEMU来转译便可直接运行，大大提高了运行速度。但KVM的kvm.ko本身只提供了CPU和内存的虚拟化，所以它必须结合QEMU才能构成一个完整的虚拟化技术，&lt;/p&gt;
    
    </summary>
    
    
      <category term="分布式与云计算" scheme="https://jyke.xyz/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8E%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="linux" scheme="https://jyke.xyz/tags/linux/"/>
    
      <category term="虚拟化" scheme="https://jyke.xyz/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="分布式与云计算" scheme="https://jyke.xyz/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8E%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>JAVA的取模和取余操作</title>
    <link href="https://jyke.xyz/posts/13488.html"/>
    <id>https://jyke.xyz/posts/13488.html</id>
    <published>2020-06-27T07:05:48.000Z</published>
    <updated>2020-06-27T07:10:43.213Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;java中取模和取余的区别&quot;&gt;JAVA中取模和取余的区别&lt;/h1&gt;
&lt;p&gt;Java 中的取余运算是 %，而取模运算是 Math.floorMod()。&lt;/p&gt;
&lt;h2 id=&quot;计算过程&quot;&gt;计算过程&lt;/h2&gt;
&lt;p&gt;在JAVA中，取模和取余的计算过程都是相同的：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;求整数商：c=a/b&lt;/li&gt;
&lt;li&gt;取模或者取余：r=a-c*b&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;两者的区别在于第一步计算c时的不同，由于c计算的方式不同导致第二步取模或者取余的值不一定相同。&lt;/p&gt;
&lt;p&gt;取模运算在计算c时，向负无穷方向舍入。取余运算在计算c时，向0舍入。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://jyke.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JAVA" scheme="https://jyke.xyz/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>linux学习笔记（2）</title>
    <link href="https://jyke.xyz/posts/49195.html"/>
    <id>https://jyke.xyz/posts/49195.html</id>
    <published>2020-06-14T08:14:46.000Z</published>
    <updated>2020-06-14T12:44:05.576Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;环境变量与文件查找&quot;&gt;环境变量与文件查找&lt;/h1&gt;
&lt;h2 id=&quot;环境变量&quot;&gt;环境变量&lt;/h2&gt;
&lt;p&gt;在 Shell 中如何创建一个变量，如何给变量赋值和如何读取变量的值呢？&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;declare&lt;/code&gt; 命令创建一个变量名为 tmp 的变量：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;declare&lt;/span&gt; tmp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;其实也可以不用 declare 预声明一个变量，直接即用即创建&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用 &lt;code&gt;=&lt;/code&gt; 号赋值运算符，将变量 tmp 赋值为lemon。注意，与其他语言不同的是， Shell 中的赋值操作，&lt;code&gt;=&lt;/code&gt; 两边不可以输入空格，否则会报错。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 正确的赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ tmp=lemon&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 错误的赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ tmp = lemon&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;读取变量的值，使用 &lt;code&gt;echo&lt;/code&gt; 命令和 &lt;code&gt;$&lt;/code&gt; 符号（&lt;strong&gt;$ 符号用于表示引用一个变量的值，初学者经常忘记输入&lt;/strong&gt;）：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$tmp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/libertyunionkjy/jykeImg/master/images/20200614162027.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：并不是任何形式的变量名都是可用的，变量名只能是英文字母、数字或者下划线，且不能以数字作为开头。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://jyke.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="linux" scheme="https://jyke.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>vim编辑器基本操作</title>
    <link href="https://jyke.xyz/posts/45117.html"/>
    <id>https://jyke.xyz/posts/45117.html</id>
    <published>2020-06-11T03:26:44.000Z</published>
    <updated>2020-07-31T10:09:05.752Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/libertyunionkjy/jykeImg/master/images/20200611182352.png&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://jyke.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="linux" scheme="https://jyke.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux学习笔记（1）</title>
    <link href="https://jyke.xyz/posts/33835.html"/>
    <id>https://jyke.xyz/posts/33835.html</id>
    <published>2020-06-07T15:22:01.000Z</published>
    <updated>2020-06-07T15:25:58.047Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://help.ubuntu.com/lts/ubuntu-help/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ubuntu 20.04 LTS 使用指南&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;基本概念及操作&quot;&gt;基本概念及操作&lt;/h1&gt;
&lt;h2 id=&quot;桌面环境&quot;&gt;桌面环境&lt;/h2&gt;
&lt;p&gt;UNIX/Linux 本身是没有图形界面的，我们通常在 UNIX/Linux 发行版上看到的图形界面实际都只是运行在 Linux 系统之上的一套软件。实现一个完整的桌面环境需要服务器和客户端&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器：xorg，xorg实现了X窗口系统（简称为X）&lt;/li&gt;
&lt;li&gt;客户端（X Client）：KDE，GNOME，XFCE，LXDE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这也意味着在 Linux 上你可以自己选择安装不同的桌面环境，甚至可以定制自己的专属桌面。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://jyke.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="linux" scheme="https://jyke.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode刷题记录（JAVA语言）</title>
    <link href="https://jyke.xyz/posts/46586.html"/>
    <id>https://jyke.xyz/posts/46586.html</id>
    <published>2020-06-02T07:56:35.000Z</published>
    <updated>2020-06-29T06:39:44.358Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章是自己刷LeetCode的记录，本意是通过自己把题目思路写出来来捋清楚思路，也为了日后的复习更方便，所以语言没有非常严谨，各位谨慎参考。&lt;/p&gt;
    
    </summary>
    
    
      <category term="LeetCode" scheme="https://jyke.xyz/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://jyke.xyz/tags/LeetCode/"/>
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>排序算法整理</title>
    <link href="https://jyke.xyz/posts/3248.html"/>
    <id>https://jyke.xyz/posts/3248.html</id>
    <published>2020-06-01T16:27:28.000Z</published>
    <updated>2020-06-04T16:12:22.053Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;排序算法是数据结构中非常重要的一个部分，在面试的时候对于一些经典的排序算法应该做到信手拈来的程度，正好最近在准备暑期实习，也趁此机会把经典的排序算法做一个梳理，方便以后查阅。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构与算法" scheme="https://jyke.xyz/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://jyke.xyz/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>JAVA——IO</title>
    <link href="https://jyke.xyz/posts/50275.html"/>
    <id>https://jyke.xyz/posts/50275.html</id>
    <published>2020-06-01T11:15:15.000Z</published>
    <updated>2020-06-01T16:25:53.381Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;io&quot;&gt;IO&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;InputStream / OutputStream：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;IO流以&lt;code&gt;byte&lt;/code&gt;（字节）为最小单位，因此也称为字节流。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Java中，&lt;code&gt;InputStream&lt;/code&gt;代表输入字节流，&lt;code&gt;OuputStream&lt;/code&gt;代表输出字节流，这是最基本的两种IO流。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Reader / Writer：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果我们需要读写的是字符，并且字符不全是单字节表示的ASCII字符，那么，按照&lt;code&gt;char&lt;/code&gt;来读写显然更方便，这种流称为字符流。&lt;/p&gt;
&lt;p&gt;Java提供了&lt;code&gt;Reader&lt;/code&gt;和&lt;code&gt;Writer&lt;/code&gt;表示字符流，字符流传输的最小数据单位是&lt;code&gt;char&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;例如，我们把&lt;code&gt;char[]&lt;/code&gt;数组&lt;code&gt;Hi你好&lt;/code&gt;这4个字符用&lt;code&gt;Writer&lt;/code&gt;字符流写入文件，并且使用UTF-8编码，得到的最终文件内容是8个字节，英文字符&lt;code&gt;H&lt;/code&gt;和&lt;code&gt;i&lt;/code&gt;各占一个字节，中文字符&lt;code&gt;你好&lt;/code&gt;各占3个字节：&lt;/p&gt;
&lt;p&gt;反过来，我们用&lt;code&gt;Reader&lt;/code&gt;读取以UTF-8编码的这8个字节，会从&lt;code&gt;Reader&lt;/code&gt;中得到&lt;code&gt;Hi你好&lt;/code&gt;这4个字符。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://jyke.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JAVA" scheme="https://jyke.xyz/tags/JAVA/"/>
    
      <category term="廖雪峰" scheme="https://jyke.xyz/tags/%E5%BB%96%E9%9B%AA%E5%B3%B0/"/>
    
  </entry>
  
  <entry>
    <title>JAVA集合</title>
    <link href="https://jyke.xyz/posts/18925.html"/>
    <id>https://jyke.xyz/posts/18925.html</id>
    <published>2020-05-31T08:26:29.000Z</published>
    <updated>2020-05-31T14:05:14.450Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;集合&quot;&gt;集合&lt;/h1&gt;
&lt;h2 id=&quot;java集合简介&quot;&gt;JAVA集合简介&lt;/h2&gt;
&lt;p&gt;Java标准库自带的&lt;code&gt;java.util&lt;/code&gt;包提供了集合类：&lt;code&gt;Collection&lt;/code&gt;，它是除&lt;code&gt;Map&lt;/code&gt;外所有其他集合类的根接口。&lt;/p&gt;
&lt;p&gt;Java的&lt;code&gt;java.util&lt;/code&gt;包主要提供了以下三种类型的集合：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;List&lt;/code&gt;：一种有序列表的集合，例如，按索引排列的&lt;code&gt;Student&lt;/code&gt;的&lt;code&gt;List&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Set&lt;/code&gt;：一种保证&lt;strong&gt;没有重复元素&lt;/strong&gt;的集合，例如，所有无重复名称的&lt;code&gt;Student&lt;/code&gt;的&lt;code&gt;Set&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Map&lt;/code&gt;：一种通过键值（key-value）查找的映射表集合，例如，根据&lt;code&gt;Student&lt;/code&gt;的&lt;code&gt;name&lt;/code&gt;查找对应&lt;code&gt;Student&lt;/code&gt;的&lt;code&gt;Map&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Java集合的设计有几个特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一是实现了&lt;strong&gt;接口和实现类相分离&lt;/strong&gt;，例如，有序表的接口是&lt;code&gt;List&lt;/code&gt;，具体的实现类有&lt;code&gt;ArrayList&lt;/code&gt;，&lt;code&gt;LinkedList&lt;/code&gt;等；&lt;/li&gt;
&lt;li&gt;二是&lt;strong&gt;支持泛型&lt;/strong&gt;，我们可以限制在一个集合中只能放入同一种数据类型的元素，例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; list = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;(); &lt;span class=&quot;comment&quot;&gt;// 只能放入String类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Java访问集合总是通过统一的方式——迭代器（Iterator）来实现，它最明显的好处在于无需知道集合内部元素是按什么方式存储的。&lt;/p&gt;
&lt;p&gt;注意到有一小部分集合类是遗留类，不应该继续使用。&lt;/p&gt;
&lt;h3 id=&quot;小结&quot;&gt;小结&lt;/h3&gt;
&lt;p&gt;Java的集合类定义在&lt;code&gt;java.util&lt;/code&gt;包中，支持泛型，主要提供了3种集合类，包括&lt;code&gt;List&lt;/code&gt;，&lt;code&gt;Set&lt;/code&gt;和&lt;code&gt;Map&lt;/code&gt;。Java集合使用统一的&lt;code&gt;Iterator&lt;/code&gt;遍历，尽量不要使用遗留接口。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://jyke.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JAVA" scheme="https://jyke.xyz/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>SQL快速入门（持续更新中...）</title>
    <link href="https://jyke.xyz/posts/4072.html"/>
    <id>https://jyke.xyz/posts/4072.html</id>
    <published>2020-05-26T16:03:17.000Z</published>
    <updated>2020-08-27T12:13:22.945Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;​ 这篇文章是在学SQL的过程中记下来的比较重要的一些笔记，学习资源是来自油管的Mosh的教学视频，感觉是非常简单易懂的教程。如果你也是刚开始学习SQL的小白，可以跟着文章的视频链接学习一遍，其中比较重要的知识点已经在这篇文章中记录下来了。学习之前需要先安装MySQL，网上安装教程很多，并且也非常简单，在此就不赘述了。&lt;/p&gt;
&lt;p&gt;点击链接可以访问Mosh油管视频：&lt;a href=&quot;https://www.youtube.com/watch?v=7S_tz1z_5bA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Thanks for Mosh&#39;s Video&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;视频有一份配套的pdf笔记，获得笔记需要填写邮箱，填写邮箱之后就会经常收到Mosh推送的他的课程的广告，所以pdf文档可以直接&lt;a href=&quot;https://programmingwithmosh.com/wp-content/uploads/2019/03/SQL-Cheat-Sheet.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点这里下载&lt;/a&gt;以免邮箱会收到很多广告。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://jyke.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>廖雪峰JAVA学习笔记（6）——泛型</title>
    <link href="https://jyke.xyz/posts/2053.html"/>
    <id>https://jyke.xyz/posts/2053.html</id>
    <published>2020-05-24T18:02:00.000Z</published>
    <updated>2020-05-24T18:03:29.109Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是泛型&quot;&gt;什么是泛型&lt;/h1&gt;
&lt;p&gt;一个简单的泛型例子：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; T[] array;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T e)&lt;/span&gt; &lt;/span&gt;&amp;#123;...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index)&lt;/span&gt; &lt;/span&gt;&amp;#123;...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; T &lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index)&lt;/span&gt; &lt;/span&gt;&amp;#123;...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;T&lt;/code&gt;可以是任何class。这样一来，我们就实现了：编写一次模版，可以创建任意类型的&lt;code&gt;ArrayList&lt;/code&gt;：&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://jyke.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JAVA" scheme="https://jyke.xyz/tags/JAVA/"/>
    
      <category term="廖雪峰" scheme="https://jyke.xyz/tags/%E5%BB%96%E9%9B%AA%E5%B3%B0/"/>
    
  </entry>
  
  <entry>
    <title>廖雪峰JAVA学习笔记（5）——注解</title>
    <link href="https://jyke.xyz/posts/32221.html"/>
    <id>https://jyke.xyz/posts/32221.html</id>
    <published>2020-05-19T09:10:48.000Z</published>
    <updated>2020-05-19T10:01:30.807Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用注解&quot;&gt;使用注解&lt;/h1&gt;
&lt;p&gt;什么是注解（Annotation）？注解是放在Java源码的类、方法、字段、参数前的一种特殊“注释”：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// this is a component:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Resource&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Hello&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Inject&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@PostConstruct&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Param String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;注释会被编译器直接忽略，注解则可以被编译器打包进入class文件&lt;/strong&gt;，因此，注解是一种用作标注的“元数据”。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://jyke.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JAVA" scheme="https://jyke.xyz/tags/JAVA/"/>
    
      <category term="廖雪峰" scheme="https://jyke.xyz/tags/%E5%BB%96%E9%9B%AA%E5%B3%B0/"/>
    
  </entry>
  
  <entry>
    <title>TCP/UDP知识点汇总</title>
    <link href="https://jyke.xyz/posts/40445.html"/>
    <id>https://jyke.xyz/posts/40445.html</id>
    <published>2020-05-18T13:16:32.000Z</published>
    <updated>2020-05-19T08:58:18.373Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前-言&quot;&gt;前 言&lt;/h1&gt;
&lt;p&gt;网络层只把分组发送到目的主机，但是真正通信的并不是主机而是主机中的进程。传输层提供了进程间的逻辑通信，传输层向高层用户屏蔽了下面网络层的核心细节，使应用程序看起来像是在两个传输层实体之间有一条端到端的逻辑通信信道。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://jyke.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习" scheme="https://jyke.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="计算机网络" scheme="https://jyke.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
</feed>
